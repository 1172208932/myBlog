import{_ as e,M as t,p,q as o,R as a,t as n,N as c,a1 as i}from"./framework-c4f3d865.js";const l={},r=i(`<h1 id="newblue-nb-axios-新蓝网内部axios二次封装" tabindex="-1"><a class="header-anchor" href="#newblue-nb-axios-新蓝网内部axios二次封装" aria-hidden="true">#</a> NewBlue(nb-axios)[新蓝网内部Axios二次封装]</h1><h3 id="说明" tabindex="-1"><a class="header-anchor" href="#说明" aria-hidden="true">#</a> 说明</h3><p>新蓝网axios请求二次封装</p><h2 id="如何应用" tabindex="-1"><a class="header-anchor" href="#如何应用" aria-hidden="true">#</a> 如何应用？</h2><h3 id="📦-install" tabindex="-1"><a class="header-anchor" href="#📦-install" aria-hidden="true">#</a> 📦 Install</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> @newblue/nb-axios <span class="token parameter variable">--registry</span><span class="token operator">=</span>http://10.200.37.236:4873/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="异步请求使用方法" tabindex="-1"><a class="header-anchor" href="#异步请求使用方法" aria-hidden="true">#</a> 异步请求使用方法</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> NbRequest <span class="token keyword">from</span> <span class="token string">&quot;nb-axios&quot;</span><span class="token punctuation">;</span>

NbRequest<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> url<span class="token punctuation">,</span> params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// get方法</span>
NbRequest<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> params<span class="token punctuation">,</span> headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// post方法</span>
NbRequest<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> params<span class="token punctuation">,</span> headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="所有入参" tabindex="-1"><a class="header-anchor" href="#所有入参" aria-hidden="true">#</a> 所有入参</h3><div class="language-ruby line-numbers-mode" data-ext="rb"><pre class="language-ruby"><code><span class="token operator">*</span> <span class="token variable">@param</span> <span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span> url 请求url 【必填】
<span class="token operator">*</span> <span class="token variable">@param</span> <span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span> method 请求方法
<span class="token operator">*</span> <span class="token variable">@param</span> <span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span> <span class="token punctuation">[</span>params<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span> 请求数据
<span class="token operator">*</span> <span class="token variable">@param</span> <span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span> <span class="token punctuation">[</span>headers<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span> 请求头
<span class="token operator">*</span> <span class="token variable">@param</span> <span class="token punctuation">{</span>boolean<span class="token punctuation">}</span> <span class="token punctuation">[</span>needQs<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">]</span> 请求数据是否需要qs序列化
<span class="token operator">*</span> <span class="token variable">@param</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> <span class="token punctuation">[</span>contentType<span class="token operator">=</span><span class="token string-literal"><span class="token string">&#39;json&#39;</span></span><span class="token punctuation">]</span> 请求头类型 值为<span class="token punctuation">[</span>json<span class="token punctuation">]</span>或者<span class="token punctuation">[</span>formData<span class="token punctuation">]</span>，默认为json
<span class="token operator">*</span> <span class="token variable">@param</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> <span class="token punctuation">[</span>responseType<span class="token operator">=</span><span class="token string-literal"><span class="token string">&#39;json&#39;</span></span><span class="token punctuation">]</span> 返回数据类型 默认为json
<span class="token operator">*</span> <span class="token variable">@param</span> <span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span> timeout 超时时间
<span class="token operator">*</span> <span class="token variable">@param</span> <span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span> <span class="token punctuation">[</span>AxiosOptions<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span> axios的官方配置 填写后会覆盖上面的入参
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="默认配置" tabindex="-1"><a class="header-anchor" href="#默认配置" aria-hidden="true">#</a> 默认配置</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>timeout<span class="token operator">=</span><span class="token string">&#39;30秒&#39;</span>
method<span class="token operator">=</span><span class="token string">&#39;POST&#39;</span>
retryTimes <span class="token operator">=</span> <span class="token number">3</span> <span class="token comment">//重新请求次数</span>
retryDelay<span class="token operator">=</span><span class="token number">1000</span> <span class="token comment">//重新发起请求的延迟时间</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="额外入参说明" tabindex="-1"><a class="header-anchor" href="#额外入参说明" aria-hidden="true">#</a> 额外入参说明</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>AxiosOptions参数新增了以下两个字段，用于控制发起重复请求的次数和delay
retryTimes = 3 //重新请求次数
retryDelay=1000 //重新发起请求的延迟时间
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题" aria-hidden="true">#</a> 常见问题</h3><ul><li>如何安装 <code>npm install nb-axios --registry http://10.200.37.236:4873</code></li><li>是否有引入其他库的Loading或者Toast组件 暂时没有，所以请求结束后也没有自动关闭弹窗等功能</li><li>如何登录npm <code>npm adduser --registry http://10.200.37.236:4873</code></li><li>如何发布npm包 <code>npm publish --registry http://10.200.37.236:4873</code></li></ul><h3 id="仓库地址" tabindex="-1"><a class="header-anchor" href="#仓库地址" aria-hidden="true">#</a> 仓库地址</h3>`,17),u={href:"http://10.30.100.65/-/ide/project/tv-template/pages-template/tree/master/-/packages/nb-axios/src/utils/request.js/",target:"_blank",rel:"noopener noreferrer"};function d(k,m){const s=t("ExternalLinkIcon");return p(),o("div",null,[r,a("p",null,[n("http://10.30.100.65/tv-template/pages-template "),a("a",u,[n("gitlab代码"),c(s)])])])}const h=e(l,[["render",d],["__file","nb-axios.html.vue"]]);export{h as default};
